import React, { useState } from 'react'
import { Link } from "react-router-dom";
import Web3 from 'web3';
import { ethers } from "ethers";

export default function Navbar() {

    function search() {}

    const [searchValue, setSearchValue] = useState("");
    return (
        <div className='flex flex-row items-center justify-between w-[1320px] py-30px'>
            <Link to="/">
                <div>
                    <svg width="80" height="80" viewBox="0 0 80 80" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M40.8333 24.3585L19.4445 17V41.5283M40.8333 24.3585L62.2222 31.717V51.216L40.8333 58.6363M40.8333 24.3585V58.6363M40.8333 24.3585L19.4445 41.5283M40.8333 58.6363L19.4445 66.0566V41.5283M40.8333 58.6363L19.4445 41.5283" stroke="#4B5563" stroke-width="3" stroke-linejoin="bevel"/>
                        <path d="M13.97 68.92H16.01C16.2767 68.92 16.5467 68.9433 16.82 68.99C17.0933 69.03 17.3367 69.12 17.55 69.26C17.77 69.3933 17.9467 69.5833 18.08 69.83C18.22 70.07 18.29 70.39 18.29 70.79C18.29 71.15 18.1833 71.4633 17.97 71.73C17.7567 71.9967 17.44 72.1733 17.02 72.26V72.28C17.2533 72.3 17.4667 72.3567 17.66 72.45C17.8533 72.5367 18.02 72.6567 18.16 72.81C18.3 72.9567 18.4067 73.1333 18.48 73.34C18.56 73.5467 18.6 73.7733 18.6 74.02C18.6 74.4267 18.52 74.76 18.36 75.02C18.2067 75.2733 18.01 75.4733 17.77 75.62C17.5367 75.7667 17.28 75.8667 17 75.92C16.7267 75.9733 16.47 76 16.23 76H13.97V68.92ZM14.63 71.98H16C16.34 71.98 16.6167 71.94 16.83 71.86C17.0433 71.7733 17.21 71.67 17.33 71.55C17.45 71.43 17.53 71.3033 17.57 71.17C17.61 71.03 17.63 70.9033 17.63 70.79C17.63 70.5433 17.5867 70.34 17.5 70.18C17.42 70.0133 17.31 69.8833 17.17 69.79C17.03 69.69 16.8667 69.62 16.68 69.58C16.4933 69.54 16.2967 69.52 16.09 69.52H14.63V71.98ZM14.63 75.4H16.14C16.5267 75.4 16.8367 75.3533 17.07 75.26C17.31 75.1667 17.4933 75.05 17.62 74.91C17.7467 74.77 17.83 74.6233 17.87 74.47C17.9167 74.31 17.94 74.1667 17.94 74.04C17.94 73.78 17.89 73.5567 17.79 73.37C17.69 73.1833 17.56 73.0333 17.4 72.92C17.24 72.8 17.0567 72.7133 16.85 72.66C16.65 72.6067 16.4467 72.58 16.24 72.58H14.63V75.4ZM20.1988 71.38H20.7988V76H20.1988V71.38ZM20.0488 69.55C20.0488 69.4233 20.0922 69.3167 20.1788 69.23C20.2655 69.1433 20.3722 69.1 20.4988 69.1C20.6255 69.1 20.7322 69.1433 20.8188 69.23C20.9055 69.3167 20.9488 69.4233 20.9488 69.55C20.9488 69.6767 20.9055 69.7833 20.8188 69.87C20.7322 69.9567 20.6255 70 20.4988 70C20.3722 70 20.2655 69.9567 20.1788 69.87C20.0922 69.7833 20.0488 69.6767 20.0488 69.55ZM24.7612 71.92H23.4412V74.93C23.4412 75.1367 23.4978 75.2967 23.6112 75.41C23.7245 75.5233 23.8812 75.58 24.0812 75.58C24.1945 75.58 24.3078 75.5667 24.4212 75.54C24.5412 75.5067 24.6545 75.4667 24.7612 75.42L24.8112 75.96C24.6978 76 24.5678 76.0367 24.4212 76.07C24.2745 76.1033 24.1445 76.12 24.0312 76.12C23.8178 76.12 23.6345 76.0867 23.4812 76.02C23.3278 75.96 23.2045 75.8767 23.1112 75.77C23.0178 75.6633 22.9478 75.54 22.9012 75.4C22.8612 75.2533 22.8412 75.0967 22.8412 74.93V71.92H21.8412V71.38H22.8412V70.05H23.4412V71.38H24.7612V71.92ZM28.5089 68.92H30.6989C31.3122 68.92 31.8322 68.9967 32.2589 69.15C32.6856 69.2967 33.0389 69.4867 33.3189 69.72C33.6056 69.9533 33.8289 70.2133 33.9889 70.5C34.1556 70.78 34.2756 71.05 34.3489 71.31C34.4289 71.57 34.4789 71.8067 34.4989 72.02C34.5189 72.2267 34.5289 72.3733 34.5289 72.46C34.5289 72.5467 34.5189 72.6967 34.4989 72.91C34.4789 73.1167 34.4289 73.35 34.3489 73.61C34.2756 73.87 34.1556 74.1433 33.9889 74.43C33.8289 74.71 33.6056 74.9667 33.3189 75.2C33.0389 75.4333 32.6856 75.6267 32.2589 75.78C31.8322 75.9267 31.3122 76 30.6989 76H28.5089V68.92ZM29.1689 75.4H30.5289C30.9956 75.4 31.4322 75.3433 31.8389 75.23C32.2456 75.11 32.5989 74.93 32.8989 74.69C33.1989 74.45 33.4356 74.1467 33.6089 73.78C33.7822 73.4067 33.8689 72.9667 33.8689 72.46C33.8689 71.9533 33.7822 71.5167 33.6089 71.15C33.4356 70.7767 33.1989 70.47 32.8989 70.23C32.5989 69.99 32.2456 69.8133 31.8389 69.7C31.4322 69.58 30.9956 69.52 30.5289 69.52H29.1689V75.4ZM35.581 73.69C35.581 73.3367 35.641 73.0133 35.761 72.72C35.881 72.42 36.0477 72.1633 36.261 71.95C36.4743 71.73 36.731 71.56 37.031 71.44C37.331 71.32 37.6577 71.26 38.011 71.26C38.3643 71.26 38.6877 71.32 38.981 71.44C39.281 71.56 39.5377 71.73 39.751 71.95C39.971 72.1633 40.141 72.42 40.261 72.72C40.381 73.0133 40.441 73.3367 40.441 73.69C40.441 74.0433 40.381 74.37 40.261 74.67C40.141 74.9633 39.971 75.22 39.751 75.44C39.5377 75.6533 39.281 75.82 38.981 75.94C38.6877 76.06 38.3643 76.12 38.011 76.12C37.6577 76.12 37.331 76.06 37.031 75.94C36.731 75.82 36.4743 75.6533 36.261 75.44C36.0477 75.22 35.881 74.9633 35.761 74.67C35.641 74.37 35.581 74.0433 35.581 73.69ZM36.181 73.69C36.181 73.95 36.221 74.1967 36.301 74.43C36.3877 74.6567 36.511 74.8567 36.671 75.03C36.831 75.1967 37.0243 75.33 37.251 75.43C37.4777 75.53 37.731 75.58 38.011 75.58C38.291 75.58 38.5443 75.53 38.771 75.43C38.9977 75.33 39.191 75.1967 39.351 75.03C39.511 74.8567 39.631 74.6567 39.711 74.43C39.7977 74.1967 39.841 73.95 39.841 73.69C39.841 73.43 39.7977 73.1867 39.711 72.96C39.631 72.7267 39.511 72.5267 39.351 72.36C39.191 72.1867 38.9977 72.05 38.771 71.95C38.5443 71.85 38.291 71.8 38.011 71.8C37.731 71.8 37.4777 71.85 37.251 71.95C37.0243 72.05 36.831 72.1867 36.671 72.36C36.511 72.5267 36.3877 72.7267 36.301 72.96C36.221 73.1867 36.181 73.43 36.181 73.69ZM41.7785 72.68C41.7785 72.5933 41.7752 72.49 41.7685 72.37C41.7618 72.2433 41.7552 72.1167 41.7485 71.99C41.7485 71.8633 41.7452 71.7467 41.7385 71.64C41.7318 71.5267 41.7285 71.44 41.7285 71.38H42.3285C42.3352 71.5533 42.3385 71.72 42.3385 71.88C42.3452 72.04 42.3552 72.1433 42.3685 72.19H42.3985C42.5185 71.9367 42.7185 71.72 42.9985 71.54C43.2785 71.3533 43.6052 71.26 43.9785 71.26C44.3385 71.26 44.6318 71.3167 44.8585 71.43C45.0852 71.5433 45.2618 71.6933 45.3885 71.88C45.5218 72.06 45.6118 72.27 45.6585 72.51C45.7118 72.75 45.7385 72.9967 45.7385 73.25V76H45.1385V73.28C45.1385 73.0933 45.1218 72.9133 45.0885 72.74C45.0552 72.56 44.9952 72.4 44.9085 72.26C44.8285 72.12 44.7118 72.01 44.5585 71.93C44.4118 71.8433 44.2185 71.8 43.9785 71.8C43.7585 71.8 43.5485 71.84 43.3485 71.92C43.1552 71.9933 42.9852 72.11 42.8385 72.27C42.6985 72.4233 42.5852 72.62 42.4985 72.86C42.4185 73.0933 42.3785 73.37 42.3785 73.69V76H41.7785V72.68ZM50.9252 74.06C50.9252 74.2867 50.9252 74.49 50.9252 74.67C50.9318 74.85 50.9385 75.0167 50.9452 75.17C50.9518 75.3233 50.9585 75.4667 50.9652 75.6C50.9785 75.7333 50.9952 75.8667 51.0152 76H50.4552C50.4152 75.7733 50.3952 75.5233 50.3952 75.25H50.3752C50.2018 75.55 49.9852 75.77 49.7252 75.91C49.4718 76.05 49.1485 76.12 48.7552 76.12C48.5552 76.12 48.3585 76.0933 48.1652 76.04C47.9718 75.9933 47.7985 75.9167 47.6452 75.81C47.4918 75.6967 47.3652 75.5533 47.2652 75.38C47.1718 75.2067 47.1252 74.9967 47.1252 74.75C47.1252 74.3967 47.2152 74.1167 47.3952 73.91C47.5752 73.7033 47.7952 73.55 48.0552 73.45C48.3218 73.3433 48.6018 73.2767 48.8952 73.25C49.1952 73.2167 49.4585 73.2 49.6852 73.2H50.3852V72.92C50.3852 72.52 50.2618 72.2333 50.0152 72.06C49.7685 71.8867 49.4585 71.8 49.0852 71.8C48.5518 71.8 48.0818 71.9733 47.6752 72.32L47.3252 71.91C47.5452 71.6967 47.8185 71.5367 48.1452 71.43C48.4718 71.3167 48.7852 71.26 49.0852 71.26C49.6452 71.26 50.0918 71.3933 50.4252 71.66C50.7585 71.92 50.9252 72.3433 50.9252 72.93V74.06ZM49.7252 73.68C49.4718 73.68 49.2252 73.6967 48.9852 73.73C48.7518 73.7633 48.5385 73.82 48.3452 73.9C48.1585 73.98 48.0085 74.0867 47.8952 74.22C47.7818 74.3533 47.7252 74.52 47.7252 74.72C47.7252 74.86 47.7552 74.9867 47.8152 75.1C47.8818 75.2067 47.9652 75.2967 48.0652 75.37C48.1652 75.4367 48.2752 75.49 48.3952 75.53C48.5218 75.5633 48.6485 75.58 48.7752 75.58C49.0952 75.58 49.3585 75.5333 49.5652 75.44C49.7718 75.3467 49.9352 75.2267 50.0552 75.08C50.1818 74.9267 50.2685 74.7567 50.3152 74.57C50.3618 74.3767 50.3852 74.1833 50.3852 73.99V73.68H49.7252ZM54.7807 71.92H53.4607V74.93C53.4607 75.1367 53.5174 75.2967 53.6307 75.41C53.744 75.5233 53.9007 75.58 54.1007 75.58C54.214 75.58 54.3274 75.5667 54.4407 75.54C54.5607 75.5067 54.674 75.4667 54.7807 75.42L54.8307 75.96C54.7174 76 54.5874 76.0367 54.4407 76.07C54.294 76.1033 54.164 76.12 54.0507 76.12C53.8374 76.12 53.654 76.0867 53.5007 76.02C53.3474 75.96 53.224 75.8767 53.1307 75.77C53.0374 75.6633 52.9674 75.54 52.9207 75.4C52.8807 75.2533 52.8607 75.0967 52.8607 74.93V71.92H51.8607V71.38H52.8607V70.05H53.4607V71.38H54.7807V71.92ZM55.9605 71.38H56.5605V76H55.9605V71.38ZM55.8105 69.55C55.8105 69.4233 55.8539 69.3167 55.9405 69.23C56.0272 69.1433 56.1339 69.1 56.2605 69.1C56.3872 69.1 56.4939 69.1433 56.5805 69.23C56.6672 69.3167 56.7105 69.4233 56.7105 69.55C56.7105 69.6767 56.6672 69.7833 56.5805 69.87C56.4939 69.9567 56.3872 70 56.2605 70C56.1339 70 56.0272 69.9567 55.9405 69.87C55.8539 69.7833 55.8105 69.6767 55.8105 69.55ZM58.0029 73.69C58.0029 73.3367 58.0629 73.0133 58.1829 72.72C58.3029 72.42 58.4696 72.1633 58.6829 71.95C58.8962 71.73 59.1529 71.56 59.4529 71.44C59.7529 71.32 60.0796 71.26 60.4329 71.26C60.7862 71.26 61.1096 71.32 61.4029 71.44C61.7029 71.56 61.9596 71.73 62.1729 71.95C62.3929 72.1633 62.5629 72.42 62.6829 72.72C62.8029 73.0133 62.8629 73.3367 62.8629 73.69C62.8629 74.0433 62.8029 74.37 62.6829 74.67C62.5629 74.9633 62.3929 75.22 62.1729 75.44C61.9596 75.6533 61.7029 75.82 61.4029 75.94C61.1096 76.06 60.7862 76.12 60.4329 76.12C60.0796 76.12 59.7529 76.06 59.4529 75.94C59.1529 75.82 58.8962 75.6533 58.6829 75.44C58.4696 75.22 58.3029 74.9633 58.1829 74.67C58.0629 74.37 58.0029 74.0433 58.0029 73.69ZM58.6029 73.69C58.6029 73.95 58.6429 74.1967 58.7229 74.43C58.8096 74.6567 58.9329 74.8567 59.0929 75.03C59.2529 75.1967 59.4462 75.33 59.6729 75.43C59.8996 75.53 60.1529 75.58 60.4329 75.58C60.7129 75.58 60.9662 75.53 61.1929 75.43C61.4196 75.33 61.6129 75.1967 61.7729 75.03C61.9329 74.8567 62.0529 74.6567 62.1329 74.43C62.2196 74.1967 62.2629 73.95 62.2629 73.69C62.2629 73.43 62.2196 73.1867 62.1329 72.96C62.0529 72.7267 61.9329 72.5267 61.7729 72.36C61.6129 72.1867 61.4196 72.05 61.1929 71.95C60.9662 71.85 60.7129 71.8 60.4329 71.8C60.1529 71.8 59.8996 71.85 59.6729 71.95C59.4462 72.05 59.2529 72.1867 59.0929 72.36C58.9329 72.5267 58.8096 72.7267 58.7229 72.96C58.6429 73.1867 58.6029 73.43 58.6029 73.69ZM64.2004 72.68C64.2004 72.5933 64.1971 72.49 64.1904 72.37C64.1837 72.2433 64.1771 72.1167 64.1704 71.99C64.1704 71.8633 64.1671 71.7467 64.1604 71.64C64.1537 71.5267 64.1504 71.44 64.1504 71.38H64.7504C64.7571 71.5533 64.7604 71.72 64.7604 71.88C64.7671 72.04 64.7771 72.1433 64.7904 72.19H64.8204C64.9404 71.9367 65.1404 71.72 65.4204 71.54C65.7004 71.3533 66.0271 71.26 66.4004 71.26C66.7604 71.26 67.0537 71.3167 67.2804 71.43C67.5071 71.5433 67.6837 71.6933 67.8104 71.88C67.9437 72.06 68.0337 72.27 68.0804 72.51C68.1337 72.75 68.1604 72.9967 68.1604 73.25V76H67.5604V73.28C67.5604 73.0933 67.5437 72.9133 67.5104 72.74C67.4771 72.56 67.4171 72.4 67.3304 72.26C67.2504 72.12 67.1337 72.01 66.9804 71.93C66.8337 71.8433 66.6404 71.8 66.4004 71.8C66.1804 71.8 65.9704 71.84 65.7704 71.92C65.5771 71.9933 65.4071 72.11 65.2604 72.27C65.1204 72.4233 65.0071 72.62 64.9204 72.86C64.8404 73.0933 64.8004 73.37 64.8004 73.69V76H64.2004V72.68Z" fill="#4B5563"/>
                    </svg>
                </div>
            </Link>
            <div id="searchBar" className="flex items-center justify-between rounded-10px border-0.5px border-gray-300 bg-white h-50px w-[800px] text-gray-200">
                <input id="search term" className="w-full border-0 mx-5 py-2 rounded-lg focus:outline-none text-14px text-gray-500 placeholder-gray-200" placeholder="Look up ways to help" value={searchValue} onChange={(event) => setSearchValue(event.target.value)}/>
                <button onClick={() => search()} className="flex justify-center items-center rounded-10px bg-gradient-to-r from-blue-400 to-blue-500 opacity-60 w-50px h-35px mr-10px hover:cursor-pointer">
                    <div className="w-20px h-20px">
                        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M15.5234 8.54252C15.5234 12.5919 12.3066 15.835 8.38672 15.835C4.46681 15.835 1.25 12.5919 1.25 8.54252C1.25 4.49318 4.46681 1.25 8.38672 1.25C12.3066 1.25 15.5234 4.49318 15.5234 8.54252Z" stroke="white" stroke-width="2.5"/>
                            <rect width="2.40176" height="7.52443" rx="1.20088" transform="matrix(0.70057 -0.713584 0.70057 0.713584 13.0459 14.6307)" fill="white"/>
                        </svg>
                    </div>
                </button>
            </div>
            <div id="Buttons" className='flex flex-row space-x-30px'>
                <AskDonate />
                <ConnectToWallet />
            </div>
        </div>
    )
}

function AskDonate() {
    return (
        <Link to="/create">
            <div className='flex justify-center items-center w-[150px] h-50px rounded-10px bg-blue-300 text-16px text-white font-semibold leading-none hover:bg-blue-50'>Ask Donate</div>
        </Link>
    )
}

function ConnectToWallet() {

    const [walletConnected, setWalletConnected] = useState(false)

    const [data, setdata] = useState({
        address: "",
        Balance: null,
      });

    let web3;
    function handleConnect() {
        if (typeof window !== "undefined" && typeof window.ethereum !== "undefined"){
            window.ethereum.request({ method: "eth_requestAccounts" })
            web3 = new Web3(window.ethereum)
            setWalletConnected(true);
        } else {
            console.log("error")
        }
    }

    // function connectToWallet() {

    //     console.log(getbalance())
    //     // Asking if metamask is already present or not
    //     if (window.ethereum) {
    
    //         // res[0] for fetching a first wallet
    //         window.ethereum
    //         .request({ method: "eth_requestAccounts" })
    //         .then((res) => accountChangeHandler(res[0]));
    //     } else {
    //         alert("install metamask extension!!");
    //     }    
    // }

    // const getbalance = (address) => {
  
    //     // Requesting balance method
    //     window.ethereum
    //       .request({ 
    //         method: "eth_getBalance", 
    //         params: [address, "latest"] 
    //       })
    //       .then((balance) => {
    //         // Setting balance
    //         setdata({
    //           Balance: ethers.utils.formatEther(balance),
    //         });
    //       });
    //   };

    // // Function for getting handling all events
    // const accountChangeHandler = (account) => {
    //     // Setting an address data
    //     setdata({
    //     address: account,
    //     });
    
    //     // Setting a balance
    //     getbalance(account);
    // };
        if (walletConnected){
            return(
                <button onClick={() => handleConnect()}>
                    <div className='flex flex-row items-center justify-center w-[180px] h-50px rounded-10px bg-blue-400 space-x-[5px] hover:bg-blue-200'>
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M21 5.6052H2.25V4.8552L18.75 3.5352V4.8552H21V2.6052C21 0.955204 19.6635 -0.202796 18.0315 0.0297041L2.97 2.1807C1.3365 2.4147 0 3.9552 0 5.6052V20.6052C0 21.4009 0.31607 22.1639 0.87868 22.7265C1.44129 23.2891 2.20435 23.6052 3 23.6052H21C21.7956 23.6052 22.5587 23.2891 23.1213 22.7265C23.6839 22.1639 24 21.4009 24 20.6052V8.6052C24 7.80955 23.6839 7.04649 23.1213 6.48388C22.5587 5.92127 21.7956 5.6052 21 5.6052ZM18.75 16.1142C18.4544 16.1141 18.1618 16.0558 17.8887 15.9426C17.6157 15.8294 17.3676 15.6635 17.1587 15.4544C16.9498 15.2454 16.7841 14.9972 16.671 14.7241C16.558 14.451 16.4999 14.1583 16.5 13.8627C16.5001 13.5671 16.5584 13.2745 16.6716 13.0014C16.7848 12.7284 16.9507 12.4803 17.1598 12.2714C17.3688 12.0625 17.617 11.8968 17.8901 11.7837C18.1632 11.6707 18.4559 11.6126 18.7515 11.6127C19.3484 11.6129 19.9208 11.8502 20.3428 12.2725C20.7648 12.6947 21.0017 13.2673 21.0015 13.8642C21.0013 14.4611 20.764 15.0335 20.3417 15.4555C19.9195 15.8775 19.3469 16.1144 18.75 16.1142Z" fill="white"/>
                        </svg>
                        <div className='text-16px text-white font-semibold leading-none'>Connect Wallet</div>

                    </div>
                </button>
            )
        }else{
            return(
                <button onClick={() => handleConnect()}>
                    <div className='flex flex-row items-center justify-center w-[180px] h-50px rounded-10px bg-blue-400 space-x-[5px] hover:bg-blue-200'>
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M21 5.6052H2.25V4.8552L18.75 3.5352V4.8552H21V2.6052C21 0.955204 19.6635 -0.202796 18.0315 0.0297041L2.97 2.1807C1.3365 2.4147 0 3.9552 0 5.6052V20.6052C0 21.4009 0.31607 22.1639 0.87868 22.7265C1.44129 23.2891 2.20435 23.6052 3 23.6052H21C21.7956 23.6052 22.5587 23.2891 23.1213 22.7265C23.6839 22.1639 24 21.4009 24 20.6052V8.6052C24 7.80955 23.6839 7.04649 23.1213 6.48388C22.5587 5.92127 21.7956 5.6052 21 5.6052ZM18.75 16.1142C18.4544 16.1141 18.1618 16.0558 17.8887 15.9426C17.6157 15.8294 17.3676 15.6635 17.1587 15.4544C16.9498 15.2454 16.7841 14.9972 16.671 14.7241C16.558 14.451 16.4999 14.1583 16.5 13.8627C16.5001 13.5671 16.5584 13.2745 16.6716 13.0014C16.7848 12.7284 16.9507 12.4803 17.1598 12.2714C17.3688 12.0625 17.617 11.8968 17.8901 11.7837C18.1632 11.6707 18.4559 11.6126 18.7515 11.6127C19.3484 11.6129 19.9208 11.8502 20.3428 12.2725C20.7648 12.6947 21.0017 13.2673 21.0015 13.8642C21.0013 14.4611 20.764 15.0335 20.3417 15.4555C19.9195 15.8775 19.3469 16.1144 18.75 16.1142Z" fill="white"/>
                        </svg>
                        <div className='text-16px text-white font-semibold leading-none'>Disconnect Wallet</div>

                    </div>
                </button>
            )
        }
        
        
    
}